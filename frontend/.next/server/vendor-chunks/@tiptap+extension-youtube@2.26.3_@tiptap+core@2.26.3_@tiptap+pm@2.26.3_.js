"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@tiptap+extension-youtube@2.26.3_@tiptap+core@2.26.3_@tiptap+pm@2.26.3_";
exports.ids = ["vendor-chunks/@tiptap+extension-youtube@2.26.3_@tiptap+core@2.26.3_@tiptap+pm@2.26.3_"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@tiptap+extension-youtube@2.26.3_@tiptap+core@2.26.3_@tiptap+pm@2.26.3_/node_modules/@tiptap/extension-youtube/dist/index.js":
/*!*********************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@tiptap+extension-youtube@2.26.3_@tiptap+core@2.26.3_@tiptap+pm@2.26.3_/node_modules/@tiptap/extension-youtube/dist/index.js ***!
  \*********************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Youtube: () => (/* binding */ Youtube),\n/* harmony export */   \"default\": () => (/* binding */ Youtube)\n/* harmony export */ });\n/* harmony import */ var _tiptap_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tiptap/core */ \"(ssr)/./node_modules/.pnpm/@tiptap+core@2.26.3_@tiptap+pm@2.26.3/node_modules/@tiptap/core/dist/index.js\");\n\n\nconst YOUTUBE_REGEX = /^((?:https?:)?\\/\\/)?((?:www|m|music)\\.)?((?:youtube\\.com|youtu\\.be|youtube-nocookie\\.com))(\\/(?:[\\w-]+\\?v=|embed\\/|v\\/)?)([\\w-]+)(\\S+)?$/;\nconst YOUTUBE_REGEX_GLOBAL = /^((?:https?:)?\\/\\/)?((?:www|m|music)\\.)?((?:youtube\\.com|youtu\\.be|youtube-nocookie\\.com))(\\/(?:[\\w-]+\\?v=|embed\\/|v\\/)?)([\\w-]+)(\\S+)?$/g;\nconst isValidYoutubeUrl = (url) => {\n    return url.match(YOUTUBE_REGEX);\n};\nconst getYoutubeEmbedUrl = (nocookie, isPlaylist) => {\n    if (isPlaylist) {\n        return 'https://www.youtube-nocookie.com/embed/videoseries?list=';\n    }\n    return nocookie ? 'https://www.youtube-nocookie.com/embed/' : 'https://www.youtube.com/embed/';\n};\nconst getYoutubeVideoOrPlaylistId = (url) => {\n    if (url.searchParams.has('v')) {\n        return { id: url.searchParams.get('v') };\n    }\n    if (url.hostname === 'youtu.be'\n        || url.pathname.includes('shorts')\n        || url.pathname.includes('live')) {\n        return { id: url.pathname.split('/').pop() };\n    }\n    if (url.searchParams.has('list')) {\n        return { id: url.searchParams.get('list'), isPlaylist: true };\n    }\n    return null;\n};\nconst getEmbedUrlFromYoutubeUrl = (options) => {\n    var _a;\n    const { url, allowFullscreen, autoplay, ccLanguage, ccLoadPolicy, controls, disableKBcontrols, enableIFrameApi, endTime, interfaceLanguage, ivLoadPolicy, loop, modestBranding, nocookie, origin, playlist, progressBarColor, startAt, rel, } = options;\n    if (!isValidYoutubeUrl(url)) {\n        return null;\n    }\n    // if is already an embed url, return it\n    if (url.includes('/embed/')) {\n        return url;\n    }\n    const urlObject = new URL(url);\n    const { id, isPlaylist } = (_a = getYoutubeVideoOrPlaylistId(urlObject)) !== null && _a !== void 0 ? _a : {};\n    if (!id) {\n        return null;\n    }\n    const embedUrl = new URL(`${getYoutubeEmbedUrl(nocookie, isPlaylist)}${id}`);\n    if (urlObject.searchParams.has('t')) {\n        embedUrl.searchParams.set('start', urlObject.searchParams.get('t').replaceAll('s', ''));\n    }\n    if (allowFullscreen === false) {\n        embedUrl.searchParams.set('fs', '0');\n    }\n    if (autoplay) {\n        embedUrl.searchParams.set('autoplay', '1');\n    }\n    if (ccLanguage) {\n        embedUrl.searchParams.set('cc_lang_pref', ccLanguage);\n    }\n    if (ccLoadPolicy) {\n        embedUrl.searchParams.set('cc_load_policy', '1');\n    }\n    if (!controls) {\n        embedUrl.searchParams.set('controls', '0');\n    }\n    if (disableKBcontrols) {\n        embedUrl.searchParams.set('disablekb', '1');\n    }\n    if (enableIFrameApi) {\n        embedUrl.searchParams.set('enablejsapi', '1');\n    }\n    if (endTime) {\n        embedUrl.searchParams.set('end', endTime.toString());\n    }\n    if (interfaceLanguage) {\n        embedUrl.searchParams.set('hl', interfaceLanguage);\n    }\n    if (ivLoadPolicy) {\n        embedUrl.searchParams.set('iv_load_policy', ivLoadPolicy.toString());\n    }\n    if (loop) {\n        embedUrl.searchParams.set('loop', '1');\n    }\n    if (modestBranding) {\n        embedUrl.searchParams.set('modestbranding', '1');\n    }\n    if (origin) {\n        embedUrl.searchParams.set('origin', origin);\n    }\n    if (playlist) {\n        embedUrl.searchParams.set('playlist', playlist);\n    }\n    if (startAt) {\n        embedUrl.searchParams.set('start', startAt.toString());\n    }\n    if (progressBarColor) {\n        embedUrl.searchParams.set('color', progressBarColor);\n    }\n    if (rel !== undefined) {\n        embedUrl.searchParams.set('rel', rel.toString());\n    }\n    return embedUrl.toString();\n};\n\n/**\n * This extension adds support for youtube videos.\n * @see https://www.tiptap.dev/api/nodes/youtube\n */\nconst Youtube = _tiptap_core__WEBPACK_IMPORTED_MODULE_0__.Node.create({\n    name: 'youtube',\n    addOptions() {\n        return {\n            addPasteHandler: true,\n            allowFullscreen: true,\n            autoplay: false,\n            ccLanguage: undefined,\n            ccLoadPolicy: undefined,\n            controls: true,\n            disableKBcontrols: false,\n            enableIFrameApi: false,\n            endTime: 0,\n            height: 480,\n            interfaceLanguage: undefined,\n            ivLoadPolicy: 0,\n            loop: false,\n            modestBranding: false,\n            HTMLAttributes: {},\n            inline: false,\n            nocookie: false,\n            origin: '',\n            playlist: '',\n            progressBarColor: undefined,\n            width: 640,\n            rel: 1,\n        };\n    },\n    inline() {\n        return this.options.inline;\n    },\n    group() {\n        return this.options.inline ? 'inline' : 'block';\n    },\n    draggable: true,\n    addAttributes() {\n        return {\n            src: {\n                default: null,\n            },\n            start: {\n                default: 0,\n            },\n            width: {\n                default: this.options.width,\n            },\n            height: {\n                default: this.options.height,\n            },\n        };\n    },\n    parseHTML() {\n        return [\n            {\n                tag: 'div[data-youtube-video] iframe',\n            },\n        ];\n    },\n    addCommands() {\n        return {\n            setYoutubeVideo: (options) => ({ commands }) => {\n                if (!isValidYoutubeUrl(options.src)) {\n                    return false;\n                }\n                return commands.insertContent({\n                    type: this.name,\n                    attrs: options,\n                });\n            },\n        };\n    },\n    addPasteRules() {\n        if (!this.options.addPasteHandler) {\n            return [];\n        }\n        return [\n            (0,_tiptap_core__WEBPACK_IMPORTED_MODULE_0__.nodePasteRule)({\n                find: YOUTUBE_REGEX_GLOBAL,\n                type: this.type,\n                getAttributes: match => {\n                    return { src: match.input };\n                },\n            }),\n        ];\n    },\n    renderHTML({ HTMLAttributes }) {\n        const embedUrl = getEmbedUrlFromYoutubeUrl({\n            url: HTMLAttributes.src,\n            allowFullscreen: this.options.allowFullscreen,\n            autoplay: this.options.autoplay,\n            ccLanguage: this.options.ccLanguage,\n            ccLoadPolicy: this.options.ccLoadPolicy,\n            controls: this.options.controls,\n            disableKBcontrols: this.options.disableKBcontrols,\n            enableIFrameApi: this.options.enableIFrameApi,\n            endTime: this.options.endTime,\n            interfaceLanguage: this.options.interfaceLanguage,\n            ivLoadPolicy: this.options.ivLoadPolicy,\n            loop: this.options.loop,\n            modestBranding: this.options.modestBranding,\n            nocookie: this.options.nocookie,\n            origin: this.options.origin,\n            playlist: this.options.playlist,\n            progressBarColor: this.options.progressBarColor,\n            startAt: HTMLAttributes.start || 0,\n            rel: this.options.rel,\n        });\n        HTMLAttributes.src = embedUrl;\n        return [\n            'div',\n            { 'data-youtube-video': '' },\n            [\n                'iframe',\n                (0,_tiptap_core__WEBPACK_IMPORTED_MODULE_0__.mergeAttributes)(this.options.HTMLAttributes, {\n                    width: this.options.width,\n                    height: this.options.height,\n                    allowfullscreen: this.options.allowFullscreen,\n                    autoplay: this.options.autoplay,\n                    ccLanguage: this.options.ccLanguage,\n                    ccLoadPolicy: this.options.ccLoadPolicy,\n                    disableKBcontrols: this.options.disableKBcontrols,\n                    enableIFrameApi: this.options.enableIFrameApi,\n                    endTime: this.options.endTime,\n                    interfaceLanguage: this.options.interfaceLanguage,\n                    ivLoadPolicy: this.options.ivLoadPolicy,\n                    loop: this.options.loop,\n                    modestBranding: this.options.modestBranding,\n                    origin: this.options.origin,\n                    playlist: this.options.playlist,\n                    progressBarColor: this.options.progressBarColor,\n                    rel: this.options.rel,\n                }, HTMLAttributes),\n            ],\n        ];\n    },\n});\n\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@tiptap+extension-youtube@2.26.3_@tiptap+core@2.26.3_@tiptap+pm@2.26.3_/node_modules/@tiptap/extension-youtube/dist/index.js\n");

/***/ })

};
;