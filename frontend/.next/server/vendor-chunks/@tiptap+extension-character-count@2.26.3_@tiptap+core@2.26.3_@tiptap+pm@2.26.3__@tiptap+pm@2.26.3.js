"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@tiptap+extension-character-count@2.26.3_@tiptap+core@2.26.3_@tiptap+pm@2.26.3__@tiptap+pm@2.26.3";
exports.ids = ["vendor-chunks/@tiptap+extension-character-count@2.26.3_@tiptap+core@2.26.3_@tiptap+pm@2.26.3__@tiptap+pm@2.26.3"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@tiptap+extension-character-count@2.26.3_@tiptap+core@2.26.3_@tiptap+pm@2.26.3__@tiptap+pm@2.26.3/node_modules/@tiptap/extension-character-count/dist/index.js":
/*!*******************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@tiptap+extension-character-count@2.26.3_@tiptap+core@2.26.3_@tiptap+pm@2.26.3__@tiptap+pm@2.26.3/node_modules/@tiptap/extension-character-count/dist/index.js ***!
  \*******************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CharacterCount: () => (/* binding */ CharacterCount),\n/* harmony export */   \"default\": () => (/* binding */ CharacterCount)\n/* harmony export */ });\n/* harmony import */ var _tiptap_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tiptap/core */ \"(ssr)/./node_modules/.pnpm/@tiptap+core@2.26.3_@tiptap+pm@2.26.3/node_modules/@tiptap/core/dist/index.js\");\n/* harmony import */ var _tiptap_pm_state__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tiptap/pm/state */ \"(ssr)/./node_modules/.pnpm/@tiptap+pm@2.26.3/node_modules/@tiptap/pm/state/dist/index.js\");\n\n\n\n/**\n * This extension allows you to count the characters and words of your document.\n * @see https://tiptap.dev/api/extensions/character-count\n */\nconst CharacterCount = _tiptap_core__WEBPACK_IMPORTED_MODULE_1__.Extension.create({\n    name: 'characterCount',\n    addOptions() {\n        return {\n            limit: null,\n            mode: 'textSize',\n            textCounter: text => text.length,\n            wordCounter: text => text.split(' ').filter(word => word !== '').length,\n        };\n    },\n    addStorage() {\n        return {\n            characters: () => 0,\n            words: () => 0,\n        };\n    },\n    onBeforeCreate() {\n        this.storage.characters = options => {\n            const node = (options === null || options === void 0 ? void 0 : options.node) || this.editor.state.doc;\n            const mode = (options === null || options === void 0 ? void 0 : options.mode) || this.options.mode;\n            if (mode === 'textSize') {\n                const text = node.textBetween(0, node.content.size, undefined, ' ');\n                return this.options.textCounter(text);\n            }\n            return node.nodeSize;\n        };\n        this.storage.words = options => {\n            const node = (options === null || options === void 0 ? void 0 : options.node) || this.editor.state.doc;\n            const text = node.textBetween(0, node.content.size, ' ', ' ');\n            return this.options.wordCounter(text);\n        };\n    },\n    addProseMirrorPlugins() {\n        let initialEvaluationDone = false;\n        return [\n            new _tiptap_pm_state__WEBPACK_IMPORTED_MODULE_0__.Plugin({\n                key: new _tiptap_pm_state__WEBPACK_IMPORTED_MODULE_0__.PluginKey('characterCount'),\n                appendTransaction: (transactions, oldState, newState) => {\n                    if (initialEvaluationDone) {\n                        return;\n                    }\n                    const limit = this.options.limit;\n                    if (limit === null || limit === undefined || limit === 0) {\n                        initialEvaluationDone = true;\n                        return;\n                    }\n                    const initialContentSize = this.storage.characters({ node: newState.doc });\n                    if (initialContentSize > limit) {\n                        const over = initialContentSize - limit;\n                        const from = 0;\n                        const to = over;\n                        console.warn(`[CharacterCount] Initial content exceeded limit of ${limit} characters. Content was automatically trimmed.`);\n                        const tr = newState.tr.deleteRange(from, to);\n                        initialEvaluationDone = true;\n                        return tr;\n                    }\n                    initialEvaluationDone = true;\n                },\n                filterTransaction: (transaction, state) => {\n                    const limit = this.options.limit;\n                    // Nothing has changed or no limit is defined. Ignore it.\n                    if (!transaction.docChanged || limit === 0 || limit === null || limit === undefined) {\n                        return true;\n                    }\n                    const oldSize = this.storage.characters({ node: state.doc });\n                    const newSize = this.storage.characters({ node: transaction.doc });\n                    // Everything is in the limit. Good.\n                    if (newSize <= limit) {\n                        return true;\n                    }\n                    // The limit has already been exceeded but will be reduced.\n                    if (oldSize > limit && newSize > limit && newSize <= oldSize) {\n                        return true;\n                    }\n                    // The limit has already been exceeded and will be increased further.\n                    if (oldSize > limit && newSize > limit && newSize > oldSize) {\n                        return false;\n                    }\n                    const isPaste = transaction.getMeta('paste');\n                    // Block all exceeding transactions that were not pasted.\n                    if (!isPaste) {\n                        return false;\n                    }\n                    // For pasted content, we try to remove the exceeding content.\n                    const pos = transaction.selection.$head.pos;\n                    const over = newSize - limit;\n                    const from = pos - over;\n                    const to = pos;\n                    // Itâ€™s probably a bad idea to mutate transactions within `filterTransaction`\n                    // but for now this is working fine.\n                    transaction.deleteRange(from, to);\n                    // In some situations, the limit will continue to be exceeded after trimming.\n                    // This happens e.g. when truncating within a complex node (e.g. table)\n                    // and ProseMirror has to close this node again.\n                    // If this is the case, we prevent the transaction completely.\n                    const updatedSize = this.storage.characters({ node: transaction.doc });\n                    if (updatedSize > limit) {\n                        return false;\n                    }\n                    return true;\n                },\n            }),\n        ];\n    },\n});\n\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHRpcHRhcCtleHRlbnNpb24tY2hhcmFjdGVyLWNvdW50QDIuMjYuM19AdGlwdGFwK2NvcmVAMi4yNi4zX0B0aXB0YXArcG1AMi4yNi4zX19AdGlwdGFwK3BtQDIuMjYuMy9ub2RlX21vZHVsZXMvQHRpcHRhcC9leHRlbnNpb24tY2hhcmFjdGVyLWNvdW50L2Rpc3QvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUF5QztBQUNZOztBQUVyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixtREFBUztBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixvREFBTTtBQUN0Qix5QkFBeUIsdURBQVM7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUVBQXlFLG9CQUFvQjtBQUM3RjtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJGQUEyRixPQUFPO0FBQ2xHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOERBQThELGlCQUFpQjtBQUMvRSw4REFBOEQsdUJBQXVCO0FBQ3JGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrRUFBa0UsdUJBQXVCO0FBQ3pGO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCLGFBQWE7QUFDYjtBQUNBLEtBQUs7QUFDTCxDQUFDOztBQUVvRDtBQUNyRCIsInNvdXJjZXMiOlsiL3Jvb3QvdGhlMTEvZnJvbnRlbmQvbm9kZV9tb2R1bGVzLy5wbnBtL0B0aXB0YXArZXh0ZW5zaW9uLWNoYXJhY3Rlci1jb3VudEAyLjI2LjNfQHRpcHRhcCtjb3JlQDIuMjYuM19AdGlwdGFwK3BtQDIuMjYuM19fQHRpcHRhcCtwbUAyLjI2LjMvbm9kZV9tb2R1bGVzL0B0aXB0YXAvZXh0ZW5zaW9uLWNoYXJhY3Rlci1jb3VudC9kaXN0L2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEV4dGVuc2lvbiB9IGZyb20gJ0B0aXB0YXAvY29yZSc7XG5pbXBvcnQgeyBQbHVnaW4sIFBsdWdpbktleSB9IGZyb20gJ0B0aXB0YXAvcG0vc3RhdGUnO1xuXG4vKipcbiAqIFRoaXMgZXh0ZW5zaW9uIGFsbG93cyB5b3UgdG8gY291bnQgdGhlIGNoYXJhY3RlcnMgYW5kIHdvcmRzIG9mIHlvdXIgZG9jdW1lbnQuXG4gKiBAc2VlIGh0dHBzOi8vdGlwdGFwLmRldi9hcGkvZXh0ZW5zaW9ucy9jaGFyYWN0ZXItY291bnRcbiAqL1xuY29uc3QgQ2hhcmFjdGVyQ291bnQgPSBFeHRlbnNpb24uY3JlYXRlKHtcbiAgICBuYW1lOiAnY2hhcmFjdGVyQ291bnQnLFxuICAgIGFkZE9wdGlvbnMoKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBsaW1pdDogbnVsbCxcbiAgICAgICAgICAgIG1vZGU6ICd0ZXh0U2l6ZScsXG4gICAgICAgICAgICB0ZXh0Q291bnRlcjogdGV4dCA9PiB0ZXh0Lmxlbmd0aCxcbiAgICAgICAgICAgIHdvcmRDb3VudGVyOiB0ZXh0ID0+IHRleHQuc3BsaXQoJyAnKS5maWx0ZXIod29yZCA9PiB3b3JkICE9PSAnJykubGVuZ3RoLFxuICAgICAgICB9O1xuICAgIH0sXG4gICAgYWRkU3RvcmFnZSgpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGNoYXJhY3RlcnM6ICgpID0+IDAsXG4gICAgICAgICAgICB3b3JkczogKCkgPT4gMCxcbiAgICAgICAgfTtcbiAgICB9LFxuICAgIG9uQmVmb3JlQ3JlYXRlKCkge1xuICAgICAgICB0aGlzLnN0b3JhZ2UuY2hhcmFjdGVycyA9IG9wdGlvbnMgPT4ge1xuICAgICAgICAgICAgY29uc3Qgbm9kZSA9IChvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMubm9kZSkgfHwgdGhpcy5lZGl0b3Iuc3RhdGUuZG9jO1xuICAgICAgICAgICAgY29uc3QgbW9kZSA9IChvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMubW9kZSkgfHwgdGhpcy5vcHRpb25zLm1vZGU7XG4gICAgICAgICAgICBpZiAobW9kZSA9PT0gJ3RleHRTaXplJykge1xuICAgICAgICAgICAgICAgIGNvbnN0IHRleHQgPSBub2RlLnRleHRCZXR3ZWVuKDAsIG5vZGUuY29udGVudC5zaXplLCB1bmRlZmluZWQsICcgJyk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMub3B0aW9ucy50ZXh0Q291bnRlcih0ZXh0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBub2RlLm5vZGVTaXplO1xuICAgICAgICB9O1xuICAgICAgICB0aGlzLnN0b3JhZ2Uud29yZHMgPSBvcHRpb25zID0+IHtcbiAgICAgICAgICAgIGNvbnN0IG5vZGUgPSAob3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLm5vZGUpIHx8IHRoaXMuZWRpdG9yLnN0YXRlLmRvYztcbiAgICAgICAgICAgIGNvbnN0IHRleHQgPSBub2RlLnRleHRCZXR3ZWVuKDAsIG5vZGUuY29udGVudC5zaXplLCAnICcsICcgJyk7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5vcHRpb25zLndvcmRDb3VudGVyKHRleHQpO1xuICAgICAgICB9O1xuICAgIH0sXG4gICAgYWRkUHJvc2VNaXJyb3JQbHVnaW5zKCkge1xuICAgICAgICBsZXQgaW5pdGlhbEV2YWx1YXRpb25Eb25lID0gZmFsc2U7XG4gICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICBuZXcgUGx1Z2luKHtcbiAgICAgICAgICAgICAgICBrZXk6IG5ldyBQbHVnaW5LZXkoJ2NoYXJhY3RlckNvdW50JyksXG4gICAgICAgICAgICAgICAgYXBwZW5kVHJhbnNhY3Rpb246ICh0cmFuc2FjdGlvbnMsIG9sZFN0YXRlLCBuZXdTdGF0ZSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBpZiAoaW5pdGlhbEV2YWx1YXRpb25Eb25lKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgY29uc3QgbGltaXQgPSB0aGlzLm9wdGlvbnMubGltaXQ7XG4gICAgICAgICAgICAgICAgICAgIGlmIChsaW1pdCA9PT0gbnVsbCB8fCBsaW1pdCA9PT0gdW5kZWZpbmVkIHx8IGxpbWl0ID09PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpbml0aWFsRXZhbHVhdGlvbkRvbmUgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGluaXRpYWxDb250ZW50U2l6ZSA9IHRoaXMuc3RvcmFnZS5jaGFyYWN0ZXJzKHsgbm9kZTogbmV3U3RhdGUuZG9jIH0pO1xuICAgICAgICAgICAgICAgICAgICBpZiAoaW5pdGlhbENvbnRlbnRTaXplID4gbGltaXQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IG92ZXIgPSBpbml0aWFsQ29udGVudFNpemUgLSBsaW1pdDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGZyb20gPSAwO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgdG8gPSBvdmVyO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS53YXJuKGBbQ2hhcmFjdGVyQ291bnRdIEluaXRpYWwgY29udGVudCBleGNlZWRlZCBsaW1pdCBvZiAke2xpbWl0fSBjaGFyYWN0ZXJzLiBDb250ZW50IHdhcyBhdXRvbWF0aWNhbGx5IHRyaW1tZWQuYCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB0ciA9IG5ld1N0YXRlLnRyLmRlbGV0ZVJhbmdlKGZyb20sIHRvKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGluaXRpYWxFdmFsdWF0aW9uRG9uZSA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHI7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaW5pdGlhbEV2YWx1YXRpb25Eb25lID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGZpbHRlclRyYW5zYWN0aW9uOiAodHJhbnNhY3Rpb24sIHN0YXRlKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGxpbWl0ID0gdGhpcy5vcHRpb25zLmxpbWl0O1xuICAgICAgICAgICAgICAgICAgICAvLyBOb3RoaW5nIGhhcyBjaGFuZ2VkIG9yIG5vIGxpbWl0IGlzIGRlZmluZWQuIElnbm9yZSBpdC5cbiAgICAgICAgICAgICAgICAgICAgaWYgKCF0cmFuc2FjdGlvbi5kb2NDaGFuZ2VkIHx8IGxpbWl0ID09PSAwIHx8IGxpbWl0ID09PSBudWxsIHx8IGxpbWl0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IG9sZFNpemUgPSB0aGlzLnN0b3JhZ2UuY2hhcmFjdGVycyh7IG5vZGU6IHN0YXRlLmRvYyB9KTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgbmV3U2l6ZSA9IHRoaXMuc3RvcmFnZS5jaGFyYWN0ZXJzKHsgbm9kZTogdHJhbnNhY3Rpb24uZG9jIH0pO1xuICAgICAgICAgICAgICAgICAgICAvLyBFdmVyeXRoaW5nIGlzIGluIHRoZSBsaW1pdC4gR29vZC5cbiAgICAgICAgICAgICAgICAgICAgaWYgKG5ld1NpemUgPD0gbGltaXQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIC8vIFRoZSBsaW1pdCBoYXMgYWxyZWFkeSBiZWVuIGV4Y2VlZGVkIGJ1dCB3aWxsIGJlIHJlZHVjZWQuXG4gICAgICAgICAgICAgICAgICAgIGlmIChvbGRTaXplID4gbGltaXQgJiYgbmV3U2l6ZSA+IGxpbWl0ICYmIG5ld1NpemUgPD0gb2xkU2l6ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgLy8gVGhlIGxpbWl0IGhhcyBhbHJlYWR5IGJlZW4gZXhjZWVkZWQgYW5kIHdpbGwgYmUgaW5jcmVhc2VkIGZ1cnRoZXIuXG4gICAgICAgICAgICAgICAgICAgIGlmIChvbGRTaXplID4gbGltaXQgJiYgbmV3U2l6ZSA+IGxpbWl0ICYmIG5ld1NpemUgPiBvbGRTaXplKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgY29uc3QgaXNQYXN0ZSA9IHRyYW5zYWN0aW9uLmdldE1ldGEoJ3Bhc3RlJyk7XG4gICAgICAgICAgICAgICAgICAgIC8vIEJsb2NrIGFsbCBleGNlZWRpbmcgdHJhbnNhY3Rpb25zIHRoYXQgd2VyZSBub3QgcGFzdGVkLlxuICAgICAgICAgICAgICAgICAgICBpZiAoIWlzUGFzdGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAvLyBGb3IgcGFzdGVkIGNvbnRlbnQsIHdlIHRyeSB0byByZW1vdmUgdGhlIGV4Y2VlZGluZyBjb250ZW50LlxuICAgICAgICAgICAgICAgICAgICBjb25zdCBwb3MgPSB0cmFuc2FjdGlvbi5zZWxlY3Rpb24uJGhlYWQucG9zO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBvdmVyID0gbmV3U2l6ZSAtIGxpbWl0O1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBmcm9tID0gcG9zIC0gb3ZlcjtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgdG8gPSBwb3M7XG4gICAgICAgICAgICAgICAgICAgIC8vIEl04oCZcyBwcm9iYWJseSBhIGJhZCBpZGVhIHRvIG11dGF0ZSB0cmFuc2FjdGlvbnMgd2l0aGluIGBmaWx0ZXJUcmFuc2FjdGlvbmBcbiAgICAgICAgICAgICAgICAgICAgLy8gYnV0IGZvciBub3cgdGhpcyBpcyB3b3JraW5nIGZpbmUuXG4gICAgICAgICAgICAgICAgICAgIHRyYW5zYWN0aW9uLmRlbGV0ZVJhbmdlKGZyb20sIHRvKTtcbiAgICAgICAgICAgICAgICAgICAgLy8gSW4gc29tZSBzaXR1YXRpb25zLCB0aGUgbGltaXQgd2lsbCBjb250aW51ZSB0byBiZSBleGNlZWRlZCBhZnRlciB0cmltbWluZy5cbiAgICAgICAgICAgICAgICAgICAgLy8gVGhpcyBoYXBwZW5zIGUuZy4gd2hlbiB0cnVuY2F0aW5nIHdpdGhpbiBhIGNvbXBsZXggbm9kZSAoZS5nLiB0YWJsZSlcbiAgICAgICAgICAgICAgICAgICAgLy8gYW5kIFByb3NlTWlycm9yIGhhcyB0byBjbG9zZSB0aGlzIG5vZGUgYWdhaW4uXG4gICAgICAgICAgICAgICAgICAgIC8vIElmIHRoaXMgaXMgdGhlIGNhc2UsIHdlIHByZXZlbnQgdGhlIHRyYW5zYWN0aW9uIGNvbXBsZXRlbHkuXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHVwZGF0ZWRTaXplID0gdGhpcy5zdG9yYWdlLmNoYXJhY3RlcnMoeyBub2RlOiB0cmFuc2FjdGlvbi5kb2MgfSk7XG4gICAgICAgICAgICAgICAgICAgIGlmICh1cGRhdGVkU2l6ZSA+IGxpbWl0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0pLFxuICAgICAgICBdO1xuICAgIH0sXG59KTtcblxuZXhwb3J0IHsgQ2hhcmFjdGVyQ291bnQsIENoYXJhY3RlckNvdW50IGFzIGRlZmF1bHQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@tiptap+extension-character-count@2.26.3_@tiptap+core@2.26.3_@tiptap+pm@2.26.3__@tiptap+pm@2.26.3/node_modules/@tiptap/extension-character-count/dist/index.js\n");

/***/ })

};
;